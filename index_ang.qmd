---
title: "Cycling in Montpellier: A Dynamic Analysis"
output: html
echo: false
---

# Introduction

The "Montpellier à Vélo" website offers a comprehensive exploration of cycling traffic in the city, combining interactive visualizations and dynamic data analysis. It allows users to examine cycling traffic trends, identify peak periods, and analyze cyclists' behaviors over time. With interactive tools such as videos, maps, and charts, the platform provides a detailed and enriching perspective on the evolution of cycling traffic in Montpellier.

# Density over a Month

We present a video illustrating the bike traffic density over the course of a month.

<video width="640" height="360" controls>

<source src="compteurs_animation.mp4" type="video/mp4">

</video>

# Description

# Traffic Prediction

Discover our interactive map that allows you to visualize the cycling traffic predictions in Montpellier. It highlights areas with high traffic and the times of day when cyclists are most active, based on historical data.

<iframe src="mtp_interactive.html" width="100%" height="500px" frameborder="0">

</iframe>

# Vélomagg Bike Checkouts and Returns

Discover the trends in bike withdrawals and deposits for Vélomagg through an interactive chart that displays the number of deposits and withdrawals at each station for every day of the week. This visualization allows you to track the daily changes in bike flows and better understand the variations in station usage, providing an in-depth analysis of usage patterns throughout the week.

<iframe src="graphique_interactif.html" width="100%" height="800">

</iframe>

# About

# Sources

The data used for this analysis comes from several sources:

[OPEN DATA 3M](https://data.montpellier3m.fr/dataset/comptages-velo-et-pieton-issus-des-compteurs-de-velo)

[OpenStreetMap](https://www.openstreetmap.org/#map=6/46.45/2.21)

<button id="toc-toggle">

Hide

</button>

```{=html}
<script>
    const toc = document.getElementById('TOC'); 
    const toggleButton = document.getElementById('toc-toggle');
    let lastScrollTop = 0; 

    toggleButton.addEventListener('click', () => {
        toc.classList.toggle('collapsed');
        
        if (toc.classList.contains('collapsed')) {
            toggleButton.textContent = 'Show'; 
        } else {
            toggleButton.textContent = 'Hide'; 
        }
    });

    
    window.addEventListener('scroll', () => {
        let currentScroll = window.pageYOffset || document.documentElement.scrollTop;

        
        if (currentScroll > lastScrollTop) {
            toggleButton.style.display = 'none'; 
        } else {
            
            toggleButton.style.display = 'block'; 
        }
        
        lastScrollTop = currentScroll <= 0 ? 0 : currentScroll; 
    });
</script>
```